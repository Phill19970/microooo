version: '3'

services:
  rabbit:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"

  user-db:
    image: postgres:15
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: user_service
      POSTGRES_PASSWORD: capstone
      POSTGRES_DB: user_service
    volumes:
      - user_data:/var/lib/postgresql/data

  appointment-db:
    image: postgres:15
    restart: always
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: appointment
      POSTGRES_PASSWORD: capstone
      POSTGRES_DB: appointment
    volumes:
      - appointment_data:/var/lib/postgresql/data

  expense-db:
    image: postgres:15
    restart: always
    ports:
      - '5435:5432'
    environment:
      POSTGRES_USER: expense
      POSTGRES_PASSWORD: capstone
      POSTGRES_DB: expense
    volumes:
      - expense_data:/var/lib/postgresql/data

  medical-record-db:
    image: postgres:15
    restart: always
    ports:
      - '5434:5432'
    environment:
      POSTGRES_USER: medical-record
      POSTGRES_PASSWORD: capstone
      POSTGRES_DB: medical-record
    volumes:
      - medical-record_data:/var/lib/postgresql/data

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  registry-service:
    build:
      context: ./registry-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy

  user:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      config-server:
        condition: service_healthy
      registry-service:
        condition: service_started
      user-db:
        condition: service_started

  medical-record:
    build:
      context: ./medical-record-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      config-server:
        condition: service_healthy
      registry-service:
        condition: service_started
      medical-record-db:
        condition: service_started

  appointment:
    build:
      context: ./appointment-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      config-server:
        condition: service_healthy
      registry-service:
        condition: service_started
      appointment-db:
        condition: service_started

  expense:
    build:
      context: ./expense-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      config-server:
        condition: service_healthy
      registry-service:
        condition: service_started
      expense-db:
        condition: service_started

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    depends_on:
      config-server:
        condition: service_healthy
      registry-service:
        condition: service_started

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    environment:
      EMAIL: kharief644@gmail.com
      PASSWORD: marson6277
    ports:
      - "8085:8085"
    depends_on:
      config-server:
        condition: service_healthy
      registry-service:
        condition: service_started

volumes:
  user_data:
  medical-record_data:
  expense_data:
  appointment_data: